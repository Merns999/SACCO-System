// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SACCO_System.Data;

#nullable disable

namespace SACCO_System.Migrations
{
    [DbContext(typeof(SharesidSaccoContext))]
    [Migration("20230802191604_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SACCO_System.Models.Account", b =>
                {
                    b.Property<int>("AccountNumber")
                        .HasColumnType("int")
                        .HasColumnName("Account_Number");

                    b.Property<decimal?>("AccountBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Account_Balance");

                    b.Property<string>("AccountName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Account_Name");

                    b.Property<string>("AccountType")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Account_Type");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At");

                    b.Property<DateTime?>("LastTransactionTimestamp")
                        .HasColumnType("datetime")
                        .HasColumnName("Last_TransactionTimestamp");

                    b.Property<sbyte?>("LockStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("Lock_Status");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("Member_ID");

                    b.HasKey("AccountNumber")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "MemberId" }, "Member_ID");

                    b.ToTable("account", (string)null);
                });

            modelBuilder.Entity("SACCO_System.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("Admin_ID");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Phone_Number");

                    b.HasKey("AdminId")
                        .HasName("PRIMARY");

                    b.ToTable("admin", (string)null);
                });

            modelBuilder.Entity("SACCO_System.Models.DeleteRequest", b =>
                {
                    b.Property<string>("DeleteRequestId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Delete_Request_ID");

                    b.Property<int?>("AccountNumber")
                        .HasColumnType("int")
                        .HasColumnName("Account_Number");

                    b.Property<DateTime?>("TimeStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("Time_stamp");

                    b.HasKey("DeleteRequestId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "AccountNumber" }, "Account_Number");

                    b.ToTable("delete_request", (string)null);
                });

            modelBuilder.Entity("SACCO_System.Models.Deposit", b =>
                {
                    b.Property<string>("DepositId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Deposit_ID");

                    b.Property<int?>("AccountNumber")
                        .HasColumnType("int")
                        .HasColumnName("Account_Number");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DepositTypeId")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Deposit_Type_ID");

                    b.Property<DateTime?>("Timestamp")
                        .HasColumnType("datetime");

                    b.Property<string>("TransactionReferenceNumber")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Transaction_Reference_Number");

                    b.Property<string>("TransactionStatus")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Transaction_Status");

                    b.HasKey("DepositId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "AccountNumber" }, "Account_Number")
                        .HasDatabaseName("Account_Number1");

                    b.HasIndex(new[] { "DepositTypeId" }, "Deposit_Type_ID");

                    b.ToTable("deposit", (string)null);
                });

            modelBuilder.Entity("SACCO_System.Models.Deposittype", b =>
                {
                    b.Property<string>("DepositTypeId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Deposit_Type_ID");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("DepositTypeId")
                        .HasName("PRIMARY");

                    b.ToTable("deposittype", (string)null);
                });

            modelBuilder.Entity("SACCO_System.Models.Dividend", b =>
                {
                    b.Property<string>("DividendId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Dividend_ID");

                    b.Property<int?>("AccountNumber")
                        .HasColumnType("int")
                        .HasColumnName("Account_Number");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DividendCalculationMethod")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Dividend_Calculation_Method");

                    b.Property<string>("DividendStatus")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Dividend_Status");

                    b.Property<DateTime?>("TimeStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("Time_stamp");

                    b.HasKey("DividendId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "AccountNumber" }, "Account_Number")
                        .HasDatabaseName("Account_Number2");

                    b.ToTable("dividend", (string)null);
                });

            modelBuilder.Entity("SACCO_System.Models.DividendPayment", b =>
                {
                    b.Property<string>("DividendPaymentId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Dividend_Payment_ID");

                    b.Property<int?>("AccountNumber")
                        .HasColumnType("int")
                        .HasColumnName("Account_Number");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DividendId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Dividend_ID");

                    b.Property<DateTime?>("TimeStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("Time_stamp");

                    b.HasKey("DividendPaymentId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "AccountNumber" }, "Account_Number")
                        .HasDatabaseName("Account_Number3");

                    b.HasIndex(new[] { "DividendId" }, "Dividend_ID");

                    b.ToTable("dividend_payment", (string)null);
                });

            modelBuilder.Entity("SACCO_System.Models.Guarantor", b =>
                {
                    b.Property<int>("GuarantorId")
                        .HasColumnType("int")
                        .HasColumnName("Guarantor_ID");

                    b.Property<string>("LoanId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Loan_ID");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("Member_ID");

                    b.HasKey("GuarantorId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "LoanId" }, "Loan_ID");

                    b.HasIndex(new[] { "MemberId" }, "Member_ID")
                        .HasDatabaseName("Member_ID1");

                    b.ToTable("guarantor", (string)null);
                });

            modelBuilder.Entity("SACCO_System.Models.Loan", b =>
                {
                    b.Property<string>("LoanId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Loan_ID");

                    b.Property<int?>("AnnualIncome")
                        .HasColumnType("int")
                        .HasColumnName("Annual_Income");

                    b.Property<decimal?>("CompoundInterest")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Compound_Interest");

                    b.Property<int?>("GuarantorId")
                        .HasColumnType("int")
                        .HasColumnName("Guarantor_ID");

                    b.Property<DateTime?>("LastPaymentTimestamp")
                        .HasColumnType("datetime")
                        .HasColumnName("Last_Payment_Timestamp");

                    b.Property<string>("LoanApplicationId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Loan_Application_ID");

                    b.Property<int?>("LoanPeriod")
                        .HasColumnType("int")
                        .HasColumnName("Loan_Period");

                    b.Property<int?>("LoanPrinciple")
                        .HasColumnType("int")
                        .HasColumnName("Loan_Principle");

                    b.Property<sbyte?>("LoanStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("Loan_Status");

                    b.Property<string>("RepaymentSchedule")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Repayment_Schedule");

                    b.Property<DateTime?>("TimeStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("Time_stamp");

                    b.Property<string>("TypeOfLoan")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Type_Of_Loan");

                    b.HasKey("LoanId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "GuarantorId" }, "Guarantor_ID");

                    b.HasIndex(new[] { "LoanApplicationId" }, "Loan_Application_ID");

                    b.ToTable("loan", (string)null);
                });

            modelBuilder.Entity("SACCO_System.Models.LoanApplication", b =>
                {
                    b.Property<string>("LoanApplicationId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Loan_Application_ID");

                    b.Property<int?>("AnnualIncome")
                        .HasColumnType("int")
                        .HasColumnName("Annual_Income");

                    b.Property<string>("ApplicationStatus")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Application_Status");

                    b.Property<string>("Guarantor")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("LoanPeriod")
                        .HasColumnType("int")
                        .HasColumnName("Loan_Period");

                    b.Property<int?>("LoanPrinciple")
                        .HasColumnType("int")
                        .HasColumnName("Loan_Principle");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("Member_ID");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Reason_For_Rejection");

                    b.Property<DateTime?>("TimeStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("Time_stamp");

                    b.Property<string>("TypeOfLoan")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Type_Of_Loan");

                    b.HasKey("LoanApplicationId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "MemberId" }, "Member_ID")
                        .HasDatabaseName("Member_ID2");

                    b.ToTable("loan_application", (string)null);
                });

            modelBuilder.Entity("SACCO_System.Models.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("Member_ID");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("Date_Of_Birth");

                    b.Property<sbyte?>("DeleteRequest")
                        .HasColumnType("tinyint")
                        .HasColumnName("Delete_Request");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MembershipStatus")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Membership_Status");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Occupation")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Phone_number");

                    b.HasKey("MemberId")
                        .HasName("PRIMARY");

                    b.ToTable("member", (string)null);
                });

            modelBuilder.Entity("SACCO_System.Models.ShareTransfer", b =>
                {
                    b.Property<string>("TransferId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Transfer_ID");

                    b.Property<int?>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<int?>("AccountNumber1")
                        .HasColumnType("int");

                    b.Property<int>("ReceiverMemberID")
                        .HasColumnType("int")
                        .HasColumnName("Receiver_Member_ID");

                    b.Property<int>("SenderMemberID")
                        .HasColumnType("int")
                        .HasColumnName("Sender_Member_ID");

                    b.Property<decimal?>("ShareCount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Share_Count");

                    b.Property<DateTime?>("TimeStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("Time_stamp");

                    b.HasKey("TransferId");

                    b.HasIndex("AccountNumber");

                    b.HasIndex("AccountNumber1");

                    b.HasIndex("ReceiverMemberID");

                    b.HasIndex("SenderMemberID");

                    b.ToTable("share_transfer", (string)null);
                });

            modelBuilder.Entity("SACCO_System.Models.Shareholder", b =>
                {
                    b.Property<string>("ShareholderId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Shareholder_ID");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("Member_ID");

                    b.Property<decimal?>("ShareCount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Share_Count");

                    b.HasKey("ShareholderId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "MemberId" }, "Member_ID")
                        .HasDatabaseName("Member_ID3");

                    b.ToTable("shareholder", (string)null);
                });

            modelBuilder.Entity("SACCO_System.Models.Withdrawal", b =>
                {
                    b.Property<string>("WithdrawalId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Withdrawal_ID");

                    b.Property<int?>("AccountNumber")
                        .HasColumnType("int")
                        .HasColumnName("Account_Number");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Phone_Number");

                    b.Property<DateTime?>("TimeStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("Time_stamp");

                    b.Property<string>("TransactionReferenceNumber")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Transaction_Reference_Number");

                    b.Property<string>("TransactionStatus")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Transaction_Status");

                    b.HasKey("WithdrawalId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "AccountNumber" }, "Account_Number")
                        .HasDatabaseName("Account_Number4");

                    b.ToTable("withdrawal", (string)null);
                });

            modelBuilder.Entity("SACCO_System.Models.Account", b =>
                {
                    b.HasOne("SACCO_System.Models.Member", "Member")
                        .WithMany("Accounts")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("account_ibfk_1");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("SACCO_System.Models.DeleteRequest", b =>
                {
                    b.HasOne("SACCO_System.Models.Account", "AccountNumberNavigation")
                        .WithMany("DeleteRequests")
                        .HasForeignKey("AccountNumber")
                        .HasConstraintName("delete_request_ibfk_1");

                    b.Navigation("AccountNumberNavigation");
                });

            modelBuilder.Entity("SACCO_System.Models.Deposit", b =>
                {
                    b.HasOne("SACCO_System.Models.Account", "AccountNumberNavigation")
                        .WithMany("Deposits")
                        .HasForeignKey("AccountNumber")
                        .HasConstraintName("deposit_ibfk_1");

                    b.HasOne("SACCO_System.Models.Deposittype", "DepositType")
                        .WithMany("Deposits")
                        .HasForeignKey("DepositTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("deposit_ibfk_2");

                    b.Navigation("AccountNumberNavigation");

                    b.Navigation("DepositType");
                });

            modelBuilder.Entity("SACCO_System.Models.Dividend", b =>
                {
                    b.HasOne("SACCO_System.Models.Account", "AccountNumberNavigation")
                        .WithMany("Dividends")
                        .HasForeignKey("AccountNumber")
                        .HasConstraintName("dividend_ibfk_1");

                    b.Navigation("AccountNumberNavigation");
                });

            modelBuilder.Entity("SACCO_System.Models.DividendPayment", b =>
                {
                    b.HasOne("SACCO_System.Models.Account", "AccountNumberNavigation")
                        .WithMany("DividendPayments")
                        .HasForeignKey("AccountNumber")
                        .HasConstraintName("dividend_payment_ibfk_2");

                    b.HasOne("SACCO_System.Models.Dividend", "Dividend")
                        .WithMany("DividendPayments")
                        .HasForeignKey("DividendId")
                        .HasConstraintName("dividend_payment_ibfk_1");

                    b.Navigation("AccountNumberNavigation");

                    b.Navigation("Dividend");
                });

            modelBuilder.Entity("SACCO_System.Models.Guarantor", b =>
                {
                    b.HasOne("SACCO_System.Models.Loan", "Loan")
                        .WithMany("Guarantors")
                        .HasForeignKey("LoanId")
                        .HasConstraintName("guarantor_ibfk_2");

                    b.HasOne("SACCO_System.Models.Member", "Member")
                        .WithMany("Guarantors")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("guarantor_ibfk_1");

                    b.Navigation("Loan");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("SACCO_System.Models.Loan", b =>
                {
                    b.HasOne("SACCO_System.Models.Guarantor", "Guarantor")
                        .WithMany("Loans")
                        .HasForeignKey("GuarantorId")
                        .HasConstraintName("loan_ibfk_2");

                    b.HasOne("SACCO_System.Models.LoanApplication", "LoanApplication")
                        .WithMany("Loans")
                        .HasForeignKey("LoanApplicationId")
                        .HasConstraintName("loan_ibfk_1");

                    b.Navigation("Guarantor");

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("SACCO_System.Models.LoanApplication", b =>
                {
                    b.HasOne("SACCO_System.Models.Member", "Member")
                        .WithMany("LoanApplications")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("loan_application_ibfk_1");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("SACCO_System.Models.ShareTransfer", b =>
                {
                    b.HasOne("SACCO_System.Models.Account", null)
                        .WithMany("ShareTransferReceiverAccountNumberNavigations")
                        .HasForeignKey("AccountNumber");

                    b.HasOne("SACCO_System.Models.Account", null)
                        .WithMany("ShareTransferSenderAccountNumberNavigations")
                        .HasForeignKey("AccountNumber1");

                    b.HasOne("SACCO_System.Models.Member", "ReceiverMemberIDNavigation")
                        .WithMany("ShareTransferReceiverMemberIDNavigations")
                        .HasForeignKey("ReceiverMemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("share_transfer_receiver_fk");

                    b.HasOne("SACCO_System.Models.Member", "SenderMemberIDNavigation")
                        .WithMany("ShareTransferSenderMemberIDNavigations")
                        .HasForeignKey("SenderMemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("share_transfer_sender_fk");

                    b.Navigation("ReceiverMemberIDNavigation");

                    b.Navigation("SenderMemberIDNavigation");
                });

            modelBuilder.Entity("SACCO_System.Models.Shareholder", b =>
                {
                    b.HasOne("SACCO_System.Models.Member", "Member")
                        .WithMany("Shareholders")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("shareholder_ibfk_1");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("SACCO_System.Models.Withdrawal", b =>
                {
                    b.HasOne("SACCO_System.Models.Account", "AccountNumberNavigation")
                        .WithMany("Withdrawals")
                        .HasForeignKey("AccountNumber")
                        .HasConstraintName("withdrawal_ibfk_1");

                    b.Navigation("AccountNumberNavigation");
                });

            modelBuilder.Entity("SACCO_System.Models.Account", b =>
                {
                    b.Navigation("DeleteRequests");

                    b.Navigation("Deposits");

                    b.Navigation("DividendPayments");

                    b.Navigation("Dividends");

                    b.Navigation("ShareTransferReceiverAccountNumberNavigations");

                    b.Navigation("ShareTransferSenderAccountNumberNavigations");

                    b.Navigation("Withdrawals");
                });

            modelBuilder.Entity("SACCO_System.Models.Deposittype", b =>
                {
                    b.Navigation("Deposits");
                });

            modelBuilder.Entity("SACCO_System.Models.Dividend", b =>
                {
                    b.Navigation("DividendPayments");
                });

            modelBuilder.Entity("SACCO_System.Models.Guarantor", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("SACCO_System.Models.Loan", b =>
                {
                    b.Navigation("Guarantors");
                });

            modelBuilder.Entity("SACCO_System.Models.LoanApplication", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("SACCO_System.Models.Member", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Guarantors");

                    b.Navigation("LoanApplications");

                    b.Navigation("ShareTransferReceiverMemberIDNavigations");

                    b.Navigation("ShareTransferSenderMemberIDNavigations");

                    b.Navigation("Shareholders");
                });
#pragma warning restore 612, 618
        }
    }
}
